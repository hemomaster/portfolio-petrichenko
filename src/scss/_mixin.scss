/* *******************************
FUNCTION AND MIXIN
******************************* */
// fixed fancybox error
@function max($numbers...) {
  @return m#{a}x(#{$numbers});
}

@function min($numbers...) {
  @return m#{i}n(#{$numbers});
}

// возвращает значение цвета по ключу $key
// $colors - ассоциативный список пар $key:цвет,
// $colors - задан в _variables.scss
@function clr($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }
  @warn "<<< Unknown `#{$key}` in $colors.";
  @return null;
}

// Возвращает значение font-size по ключу
// из ассоциативного массива $fontsize
@function fz($key) {
  @if map-has-key($fontsize, $key) {
    @return map-get($fontsize, $key);
  }
  @warn "<<< Unknown `#{$key}` in $fontsize.";
  @return null;
}

// Возвращает значение font-weidth по ключу
// из ассоциативного массива $fontweidth
@function fw($key) {
  @if map-has-key($fontweidth, $key) {
    @return map-get($fontweidth, $key);
  }
  @warn "<<< Unknown `#{$key}` in $fontweidth.";
  @return null;
}

// Возвращает значение без единиц измерения
// $number - Number to remove unit from
// @return {Number} - Unitless number
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

// Конвертирует полученное значение px, em, vw, vh => rem
// где 1rem = 16px
@function rem($number) {
  @return (strip-unit($number) / 16) * 1rem;
}

/* 
Пример
https://youtu.be/T_zHRPpc1-w?t=3304

все font-size оборачивеам в rem $fz-l: rem(16px)

и в селекторе тега html по медиазапросам уменьшаем font-size
html {
  font-size: 11px;

  @media(min-widht: 1200px{
    font-size: 16px;
  }
  @media(min-widht: 992px{
    font-size: 15px;
  }
  @media(min-widht: 768px{
    font-size: 14px;
  }
  @media(min-widht: 576px{
    font-size: 13px;
  }
  @media(min-widht: 375px{
    font-size: 12px;
  }
}
 */

@mixin poppins($fz: fz(sm), $lh: 1.5) {
  font-family: $main-font;
  font-weight: fw(medium);
  font-size: $fz;
  line-height: $lh;
}

// ДО указанного значения
@mixin respond-to($point) {
  @if map-has-key($breakpoints-to, $point) {
    @media (max-width: #{map-get($breakpoints-to, $point)}) {
      @content;
    }
  } @else {
    @warn "<<< Unfortunately, no value could be retrieved from `#{$point}`. "
        + "Please make sure it is defined in `$breakpoint-to` map.";
  }
}

// ОТ указанного значения и выше
@mixin respond-from($point) {
  @if map-has-key($breakpoints, $point) {
    @media (min-width: #{map-get($breakpoints, $point)}) {
      @content;
    }
  } @else {
    @warn "<<< Unfortunately, no value could be retrieved from `#{$point}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

// ограничить многострочный текст
@mixin limitstr($str: 2) {
  -webkit-line-clamp: $str; /* Число отображаемых строк */
  display: -webkit-box; /* Включаем флексбоксы */
  -webkit-box-orient: vertical; /* Вертикальная ориентация */
  overflow: hidden;
}

@mixin transit($prop: all) {
  transition: $prop 0.3s ease-in-out;
}

%x-center {
  margin: 0 auto;
}

%d-block {
  display: block;
}

%d-flex {
  display: flex;
}

%f-center {
  @extend %d-flex;
  align-items: center;
  justify-content: center;
}

%f-space-between {
  @extend %d-flex;
  align-items: center;
  justify-content: space-between;
}

%d-grid {
  display: grid;
}

%cover-location {
  background-color: clr(cover-color);
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}

%poppins-bold {
  font-weight: fw(bold);
  font-size: fz(xxl);
  line-height: 1.67;
}

%circle-decor {
  position: relative;
  padding-left: 10px;
  z-index: 10;

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    width: 36px;
    height: 36px;
    border-radius: 100%;
    background-color: clr(accent-color);
    z-index: -1;
  }
}

%bar-decor {
  span {
    @extend %d-block;
    position: relative;
    padding-bottom: 25px;

    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      width: 60px;
      height: 3px;
      background-color: clr(accent-color);
      @extend %x-center;
    }
  }
}
